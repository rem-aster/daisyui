import{t as j,a as I}from"../chunks/LFhyL0Oe.js";import"../chunks/gclTb0SW.js";import{s,f as K,c as a,r as e,b as $}from"../chunks/C4PvZKYF.js";import{h as t}from"../chunks/wz55X6qA.js";import{l as U,s as T}from"../chunks/D6tDoBIA.js";import{L as Z}from"../chunks/BynBwUY8.js";const v={title:"How to install SvelteKit with daisyUI?",desc:"SvelteKit is a meta framework for building web applications. It is based on Svelte, a compiler that turns your Svelte components into fast and efficient JavaScript.",published:!0,date:"2023-11-25T00:00:00.000Z",author:"Pouya Saadeghi",thumbnail:"https://img.daisyui.com/images/blog/install-sveltekit-daisyui.webp",tags:["Frameworks"]},{title:E,desc:M,published:q,date:Y,author:J,thumbnail:R,tags:G}=v;var A=j(`<p>The biggest advantage of using Svelte, aside from speed and developer experience, is that it’s a disappearing framework. It doesn’t add any runtime library to your app, so you would only ship the code that you actually use.</p> <p>If you haven’t used Svelte before, You would be surprised how easy it is to learn compared to other frameworks.</p> <h2 id="how-to-install-sveltekit"><a aria-hidden="true" tabindex="-1" href="#how-to-install-sveltekit"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>How to install SvelteKit?</h2> <ol><li>To start new <a href="https://kit.svelte.dev/" rel="nofollow" target="_blank">SvelteKit</a> project, you can use the following command:</li></ol> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>It asks you a few questions.
Let’s pick <code>Skeleton project</code>:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <ol start="2"><li>After the setup is done, go to the project directory and install dependencies and start the development server:</li></ol> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>It opens a new browser tab at <code>http://localhost:5173/</code> and you can see <code>Welcome to SvelteKit</code> message!</p> <p>That’s it! You have a new SvelteKit project.</p> <h2 id="how-to-add-tailwind-css-and-daisyui-to-sveltekit"><a aria-hidden="true" tabindex="-1" href="#how-to-add-tailwind-css-and-daisyui-to-sveltekit"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>How to add Tailwind CSS and daisyUI to SvelteKit?</h2> <ol><li>Install Tailwind CSS, PostCSS, Autoprefixer and daisyUI,
Then generate tailwind.config.js and postcss.config.js files:</li></ol> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <ol start="2"><li>Edit <code>tailwind.config.js</code> file. Add <code>content</code> and <code>plugins</code> to it:</li></ol> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <ol start="3"><li>Add the following lines to <code>svelte.config.js</code> file:</li></ol> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <ol start="4"><li>Create a new <code>src/routes/+layout.svelte</code> file and import <code>tailwindcss/tailwind.css</code> in it using this command</li></ol> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <h2 id="how-to-use-daisyui-components-in-sveltekit"><a aria-hidden="true" tabindex="-1" href="#how-to-use-daisyui-components-in-sveltekit"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>How to use daisyUI components in SvelteKit?</h2> <p>Add a daisyUI button to <code>src/routes/+page.svelte</code> file:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>Run the development server and see the button with daisyUI styles!</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>Easy, right?</p> <p>Explore all the <a href="https://daisyui.com/components/" rel="nofollow" target="_blank">daisyUI components</a> you can use in your project,
And also check out the <a href="https://kit.svelte.dev/" rel="nofollow" target="_blank">SvelteKit docs</a> to learn more about SvelteKit.</p>`,1);function N(k,m){const y=U(m,["children","$$slots","$$events","$$legacy"]);Z(k,T(()=>y,v,{children:(g,B)=>{var h=A(),n=s(K(h),8),b=a(n);t(b,()=>'<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span>npm create svelte@latest my-app</span></span></code></pre>'),e(n);var i=s(n,4),f=a(i);t(f,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span>┌  Welcome to SvelteKit!</span></span>
<span class="line"><span>│</span></span>
<span class="line"><span>◆  Which Svelte app template?</span></span>
<span class="line"><span>│  ○ SvelteKit demo app</span></span>
<span class="line"><span>│  ● Skeleton project (Barebones scaffolding for your new SvelteKit app)</span></span>
<span class="line"><span>│  ○ Library project</span></span>
<span class="line"><span>└</span></span></code></pre>`),e(i);var o=s(i,4),w=a(o);t(w,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span>cd my-app</span></span>
<span class="line"><span>npm install</span></span>
<span class="line"><span>npm run dev -- --open</span></span></code></pre>`),e(o);var l=s(o,10),x=a(l);t(x,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span>npm install -D tailwindcss postcss autoprefixer daisyui</span></span>
<span class="line"><span>npx tailwindcss init -p</span></span></code></pre>`),e(l);var p=s(l,4),S=a(p);t(S,()=>`<pre class="shiki-diff shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span class="shiki-punctuation" style="color:var(--shiki-punctuation)">/** @type &#123;import('tailwindcss').Config&#125; */</span></span>
<span class="line"><span class="shiki-punctuation" style="color:var(--shiki-punctuation)">export default &#123;</span></span>
<span class="line"><span class="select-none" style="color:var(--shiki-punctuation)">-</span><span class="shiki-deleted" style="color:var(--shiki-deleted)"> content: [],</span></span>
<span class="line"><span class="select-none" style="color:var(--shiki-punctuation)">+</span><span class="shiki-added" style="color:var(--shiki-added)"> content: ['./src/**/*.&#123;html,svelte,js,ts&#125;'],</span></span>
<span class="line"><span class="shiki-punctuation" style="color:var(--shiki-punctuation)">  theme: &#123;</span></span>
<span class="line"><span class="shiki-punctuation" style="color:var(--shiki-punctuation)">    extend: &#123;&#125;,</span></span>
<span class="line"><span class="shiki-punctuation" style="color:var(--shiki-punctuation)">  &#125;,</span></span>
<span class="line"><span class="select-none" style="color:var(--shiki-punctuation)">-</span><span class="shiki-deleted" style="color:var(--shiki-deleted)"> plugins: [],</span></span>
<span class="line"><span class="select-none" style="color:var(--shiki-punctuation)">+</span><span class="shiki-added" style="color:var(--shiki-added)"> plugins: [require('daisyui')],</span></span>
<span class="line"><span class="shiki-punctuation" style="color:var(--shiki-punctuation)">&#125;</span></span></code></pre>`),e(p);var r=s(p,4),_=a(r);t(_,()=>`<pre class="shiki-diff shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span class="shiki-punctuation" style="color:var(--shiki-punctuation)">import adapter from '@sveltejs/adapter-auto';</span></span>
<span class="line"><span class="select-none" style="color:var(--shiki-punctuation)">+</span><span class="shiki-added" style="color:var(--shiki-added)">import &#123; vitePreprocess &#125; from '@sveltejs/vite-plugin-svelte';</span></span>
<span class="line"><span class="shiki-punctuation" style="color:var(--shiki-punctuation)">/** @type &#123;import('@sveltejs/kit').Config&#125; */</span></span>
<span class="line"><span class="shiki-punctuation" style="color:var(--shiki-punctuation)">const config = &#123;</span></span>
<span class="line"><span class="select-none" style="color:var(--shiki-punctuation)">+</span><span class="shiki-added" style="color:var(--shiki-added)"> preprocess: vitePreprocess(),</span></span>
<span class="line"><span class="shiki-punctuation" style="color:var(--shiki-punctuation)">  kit: &#123;</span></span>
<span class="line"><span class="shiki-punctuation" style="color:var(--shiki-punctuation)">    // adapter-auto only supports some environments, see https://kit.svelte.dev/docs/adapter-auto for a list.</span></span>
<span class="line"><span class="shiki-punctuation" style="color:var(--shiki-punctuation)">    // If your environment is not supported or you settled on a specific environment, switch out the adapter.</span></span>
<span class="line"><span class="shiki-punctuation" style="color:var(--shiki-punctuation)">    // See https://kit.svelte.dev/docs/adapters for more information about adapters.</span></span>
<span class="line"><span class="shiki-punctuation" style="color:var(--shiki-punctuation)">    adapter: adapter()</span></span>
<span class="line"><span class="shiki-punctuation" style="color:var(--shiki-punctuation)">  &#125;</span></span>
<span class="line"><span class="shiki-punctuation" style="color:var(--shiki-punctuation)">&#125;;</span></span>
<span class="line"></span>
<span class="line"><span class="shiki-punctuation" style="color:var(--shiki-punctuation)">export default config;</span></span></code></pre>`),e(r);var c=s(r,4),H=a(c);t(H,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#0DB9D7">echo</span><span style="color:var(--shiki-punctuation)"> '</span></span>
<span class="line"><span style="color:var(--shiki-attr-value)">&#x3C;script></span></span>
<span class="line"><span style="color:var(--shiki-attr-value)">  import "tailwindcss/tailwind.css";</span></span>
<span class="line"><span style="color:var(--shiki-attr-value)">&#x3C;/script></span></span>
<span class="line"></span>
<span class="line"><span style="color:var(--shiki-attr-value)">&#x3C;slot /></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">'</span><span style="color:var(--shiki-punctuation)"> > </span><span style="color:var(--shiki-attr-value)">src/routes/+layout.svelte</span></span></code></pre>`),e(c);var d=s(c,6),V=a(d);t(V,()=>`<pre class="shiki-diff shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span class="shiki-punctuation" style="color:var(--shiki-punctuation)"> &#x3C;h1>Welcome to SvelteKit&#x3C;/h1></span></span>
<span class="line"><span class="shiki-punctuation" style="color:var(--shiki-punctuation)"> &#x3C;p>Visit &#x3C;a href="https://kit.svelte.dev">kit.svelte.dev&#x3C;/a> to read the documentation&#x3C;/p></span></span>
<span class="line"><span class="select-none" style="color:var(--shiki-punctuation)">+</span><span class="shiki-added" style="color:var(--shiki-added)">&#x3C;button class="btn btn-primary">Hello daisyUI&#x3C;/button></span></span></code></pre>`),e(d);var u=s(d,4),C=a(u);t(C,()=>'<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span>npm run dev -- --open</span></span></code></pre>'),e(u),$(4),I(g,h)},$$slots:{default:!0}}))}export{N as component};

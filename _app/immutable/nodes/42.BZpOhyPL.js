import{t as F,a as C}from"../chunks/LFhyL0Oe.js";import"../chunks/gclTb0SW.js";import{s as a,f as D,c as s,r as n,b as A}from"../chunks/C4PvZKYF.js";import{h as o}from"../chunks/wz55X6qA.js";import{l as S,s as _}from"../chunks/D6tDoBIA.js";import{L as Z}from"../chunks/BLPDbuNJ.js";const u={title:"The most common mistake when using Tailwind CSS (and how to fix it)",desc:"While working on daisyUI, I see a lot of people making this mistake when using Tailwind CSS.",published:!0,date:"2023-9-14",author:"Pouya Saadeghi",thumbnail:"https://img.daisyui.com/images/blog/tailwind-mistake.webp",tags:["Guides"]},{title:q,desc:G,published:P,date:U,author:R,thumbnail:W,tags:E}=u;var T=F(`<p>As a maintainer of daisyUI, I help people on GitHub issues and GitHub discussions every day. I see a lot of people making this mistake when using Tailwind CSS. Itâ€™s so simple to avoid but I find it so common among developers.</p> <h2 id="the-mistake"><a aria-hidden="true" tabindex="-1" href="#the-mistake"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>The mistake</h2> <p>Hereâ€™s how we simply use Tailwind CSS class names in HTML:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>However it would be cool if we do some totally necessary engineering and make it more dynamic. So we do something like this:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>You might even want to do the same thing with daisyUI class names:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>Itâ€™s cool, right?
It even works in dev environment.</p> <p>Everything is fineâ€¦
ðŸ˜  until we build our app for production and you realize the color is not working anymore</p> <h2 id="why-it-doesnt-work"><a aria-hidden="true" tabindex="-1" href="#why-it-doesnt-work"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Why it doesnâ€™t work?</h2> <p>Tailwind CSS scans your HTML files and looks for class names. Then it generates a CSS file based on the class names it finds. Itâ€™s that simple. Because the string <code>bg-red-500</code> does not exist in <code>bg-&#123;&#123; color &#125;&#125;-500</code>, it simply wonâ€™t generate the CSS for it.</p> <p>Read more about <a href="https://tailwindcss.com/docs/content-configuration#dynamic-class-names" rel="nofollow" target="_blank">using dynamic class names with Tailwind CSS</a>.</p> <h2 id="but-it-was-working-in-dev-environment"><a aria-hidden="true" tabindex="-1" href="#but-it-was-working-in-dev-environment"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>But it was working in dev environment!</h2> <p>Yes, it was working because you probably first had <code>bg-red-500</code> in your file, you saved the file and <code>.bg-red-500</code> class name got added to your CSS. Then you changed it to <code>bg-&#123;&#123; color &#125;&#125;-500</code> and saved the file again. <code>bg-red-500</code> is not in your HTML anymore, but itâ€™s still in your CSS file. So it works in dev environment, but not in production.</p> <h2 id="but-some-class-names-work-and-some-dont"><a aria-hidden="true" tabindex="-1" href="#but-some-class-names-work-and-some-dont"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>But some class names work and some donâ€™t!</h2> <p>Probably because you used those class names the correct way (as a string like <code>bg-red-500</code>) in another file.</p> <h2 id="solutions"><a aria-hidden="true" tabindex="-1" href="#solutions"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Solutions</h2> <p>How to fix it?</p> <p>Simply <strong>do not</strong> use dynamic class names like <code>bg-&#123;&#123; color &#125;&#125;-500</code>. Make sure the whole class name as a string exists in your file.</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>If you really have to do that, You have 3 ways:</p> <h3 id="solution-1-add-the-class-names-somewhere-in-the-file"><a aria-hidden="true" tabindex="-1" href="#solution-1-add-the-class-names-somewhere-in-the-file"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Solution 1: Add the class names somewhere in the file</h3> <p>Map the required class names somewhere in your file. It can be an object, a comment or anything.</p> <h3 id="solution-2-a-safelist-file"><a aria-hidden="true" tabindex="-1" href="#solution-2-a-safelist-file"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Solution 2: A safelist file</h3> <p>List all the required class names in a safelist file and add it to your <code>tailwind.config.js</code> file as <code>content</code></p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p><code>./path/safelist.txt</code> file can be simply like this:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <h3 id="solution-3-safelist-config"><a aria-hidden="true" tabindex="-1" href="#solution-3-safelist-config"><span class="heading-anchorlink-icon bg-base-content/5 hover:bg-primary/10 size-[1em] text-base-content/30 hover:text-primary/50 rounded-field border border-base-content/5 hover:border-primary/20 inline-grid place-content-center hover:shadow-sm hover:shadow-base-200 align-text-bottom me-3 lg:absolute lg:ms-[-1.5em] lg:mt-1 transition-all group"><svg class="group-hover:scale-100 scale-90 transition-transform" fill="currentColor" width=".5em" height=".5em" viewBox="0 0 256 256" id="Flat" xmlns="http://www.w3.org/2000/svg"><path d="M216,148H172V108h44a12,12,0,0,0,0-24H172V40a12,12,0,0,0-24,0V84H108V40a12,12,0,0,0-24,0V84H40a12,12,0,0,0,0,24H84v40H40a12,12,0,0,0,0,24H84v44a12,12,0,0,0,24,0V172h40v44a12,12,0,0,0,24,0V172h44a12,12,0,0,0,0-24Zm-108,0V108h40v40Z"></path></svg></span></a>Solution 3: Safelist config</h3> <p>Safelist all the required class names in your <code>tailwind.config.js</code> file.</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>You can also use regex patterns in safelist:</p> <div class="has-[.code-tab]:my-4 overflow-x-auto [direction:ltr]"><!></div> <p>Read more about <a href="https://tailwindcss.com/docs/content-configuration#safelisting-classes" rel="nofollow" target="_blank">Tailwind CSS safelist</a>.</p>`,1);function J(v,y){const m=S(y,["children","$$slots","$$events","$$legacy"]);Z(v,_(()=>m,u,{children:(g,I)=>{var h=T(),t=a(D(h),6),k=s(t);o(k,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;div</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">bg-red-500</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">>&#x3C;/div></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;div</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">bg-green-500</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">>&#x3C;/div></span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;div</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">bg-blue-500</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">>&#x3C;/div></span></span></code></pre>`),n(t);var e=a(t,4),b=s(e);o(b,()=>'<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;div</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">bg-&#123;&#123; color &#125;&#125;-500</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">>&#x3C;/div></span></span></code></pre>'),n(e);var i=a(e,4),w=s(i);o(w,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;div</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">btn btn-&#123;&#123; type &#125;&#125;</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">>&#x3C;/div></span></span>
<span class="line"><span style="color:var(--shiki-token)">instead of</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;div</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">btn-primary</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">>&#x3C;/div></span></span></code></pre>`),n(i);var r=a(i,26),f=s(r);o(f,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:var(--shiki-attr-name);font-style:italic">let</span><span style="color:var(--shiki-attr-name)"> color</span><span style="color:var(--shiki-punctuation)"> = </span><span style="color:var(--shiki-punctuation)">'</span><span style="color:var(--shiki-attr-value)">bg-red-500</span><span style="color:var(--shiki-punctuation)">'</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">&#x3C;div</span><span style="color:var(--shiki-attr-name)"> class</span><span style="color:var(--shiki-punctuation)">=</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">&#123;&#123; color &#125;&#125;</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">>&#x3C;/div></span></span></code></pre>`),n(r);var l=a(r,12),x=s(l);o(x,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#0DB9D7">module</span><span style="color:var(--shiki-punctuation)">.</span><span style="color:#0DB9D7">exports</span><span style="color:var(--shiki-punctuation)"> = </span><span style="color:#9ABDF5">&#123;</span></span>
<span class="line"><span style="color:#73DACA">  content</span><span style="color:var(--shiki-punctuation)">: </span><span style="color:#9ABDF5">[</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">./path/safelist.txt</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:#9ABDF5">]</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">  // ...</span></span>
<span class="line"><span style="color:#9ABDF5">&#125;</span></span></code></pre>`),n(l);var p=a(l,4),H=s(p);o(H,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span>bg-red-500</span></span>
<span class="line"><span>bg-green-500</span></span>
<span class="line"><span>bg-blue-500</span></span></code></pre>`),n(p);var c=a(p,6),V=s(c);o(V,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#0DB9D7">module</span><span style="color:var(--shiki-punctuation)">.</span><span style="color:#0DB9D7">exports</span><span style="color:var(--shiki-punctuation)"> = </span><span style="color:#9ABDF5">&#123;</span></span>
<span class="line"><span style="color:#73DACA">  content</span><span style="color:var(--shiki-punctuation)">: </span><span style="color:#9ABDF5">[</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">./pages/**/*.&#123;html,js&#125;</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">, </span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">./components/**/*.&#123;html,js&#125;</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:#9ABDF5">]</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">  // ...</span></span>
<span class="line"><span style="color:#73DACA">  safelist</span><span style="color:var(--shiki-punctuation)">: </span><span style="color:#9ABDF5">[</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">bg-red-500</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">, </span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">bg-green-500</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">, </span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">bg-blue-500</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:#9ABDF5">]</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">  // ...</span></span>
<span class="line"><span style="color:#9ABDF5">&#125;</span></span></code></pre>`),n(c);var d=a(c,4),B=s(d);o(B,()=>`<pre class="shiki tokyo-night" style="background-color:var(--shiki-bg);color:var(--shiki-punctuation)" tabindex="0"><code><span class="line"><span style="color:#0DB9D7">module</span><span style="color:var(--shiki-punctuation)">.</span><span style="color:#0DB9D7">exports</span><span style="color:var(--shiki-punctuation)"> = </span><span style="color:#9ABDF5">&#123;</span></span>
<span class="line"><span style="color:#73DACA">  content</span><span style="color:var(--shiki-punctuation)">: </span><span style="color:#9ABDF5">[</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">./pages/**/*.&#123;html,js&#125;</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">, </span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-attr-value)">./components/**/*.&#123;html,js&#125;</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:#9ABDF5">]</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">  // ...</span></span>
<span class="line"><span style="color:#73DACA">  safelist</span><span style="color:var(--shiki-punctuation)">: </span><span style="color:#9ABDF5">[</span></span>
<span class="line"><span style="color:var(--shiki-punctuation)">    "</span><span style="color:var(--shiki-attr-value)">bg-teal-700</span><span style="color:var(--shiki-punctuation)">"</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:#9ABDF5">    &#123;</span></span>
<span class="line"><span style="color:#73DACA">      pattern</span><span style="color:var(--shiki-punctuation)">:</span><span style="color:var(--shiki-punctuation)"> /</span><span style="color:#B4F9F8">bg-</span><span style="color:var(--shiki-punctuation)">(</span><span style="color:#B4F9F8">red</span><span style="color:var(--shiki-attr-name)">|</span><span style="color:#B4F9F8">green</span><span style="color:var(--shiki-attr-name)">|</span><span style="color:#B4F9F8">blue</span><span style="color:var(--shiki-punctuation)">)</span><span style="color:#B4F9F8">-</span><span style="color:var(--shiki-punctuation)">(</span><span style="color:#B4F9F8">400</span><span style="color:var(--shiki-attr-name)">|</span><span style="color:#B4F9F8">500</span><span style="color:var(--shiki-attr-name)">|</span><span style="color:#B4F9F8">600</span><span style="color:var(--shiki-punctuation)">)/</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:#9ABDF5">    &#125;</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:#9ABDF5">  ]</span><span style="color:var(--shiki-punctuation)">,</span></span>
<span class="line"><span style="color:var(--shiki-comment);font-style:italic">  // ...</span></span>
<span class="line"><span style="color:#9ABDF5">&#125;</span></span></code></pre>`),n(d),A(2),C(g,h)},$$slots:{default:!0}}))}export{J as component};
